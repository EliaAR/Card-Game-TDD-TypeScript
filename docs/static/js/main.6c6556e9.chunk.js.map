{"version":3,"sources":["Components/Header/Header.tsx","Components/Enemy/Enemy.tsx","Components/Player/Player.tsx","Components/Consumable/Consumable.tsx","Utils/dices.ts","Utils/getAbilityModifier.ts","Utils/resolveCombat.ts","Components/CombatLog/CombatLog.tsx","Components/Common/Modal/Modal.tsx","Components/Battlefield/Battlefield.tsx","Components/HomePage/HomePage.tsx","Images/Aleksandra.png","Data/characters.ts","Images/Gnome.png","Images/Human.png","Images/Dwarf.png","Images/Elf.png","Data/consumables.ts","Images/heathPotion.png","Components/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","level","className","Enemy","onClickEnemy","name","srcImg","life","maxLife","strength","dexterity","onClick","role","src","alt","title","Player","Consumable","onClickConsumable","number","consumableDisabled","undefined","rollD20","Math","floor","random","rollD4","getAbilityModifier","abilityScore","resolveCombat","roll20","roll4","strengthModifier","dexterityModifier","resultD20","resultD4","attackRoll","armorClass","damage","CombatLog","messages","lastMsgRef","useRef","useEffect","current","scrollIntoView","length","map","message","index","array","type","ref","text","modalRoot","document","createElement","Modal","onCloseModal","children","ReactDOM","createPortal","e","stopPropagation","setAttribute","body","appendChild","Battlefield","enemy","player","healthPotion","currentAmountPotions","setCurrentAmountPotions","onCombatFinish","mockRoll20Enemy","mockRoll4Enemy","mockRoll20Player","mockRoll4Player","useState","enemyLife","setEnemyLife","setMessages","playerLife","setPlayerLife","enemyTurn","setEnemyTurn","tutorialModal","setTutorialModal","playerResultLife","enemyResultLife","remainingPlayerLife","HomePage","onClickStart","Aleksandra","healtPotion","App","mockEnemy","mockPlayer","mockHealthPotion","screen","setScreen","setLevel","numberPotions","setNumberPotions","combatResult","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6c6556e9.chunk.js","sourcesContent":["import \"./Header.scss\";\n\ninterface HeaderProps {\n  level: number;\n}\n\nfunction Header({ level }: HeaderProps) {\n  return (\n    <section className=\"header\">\n      <h1 className=\"header__title\">Mazmorra {level}</h1>\n    </section>\n  );\n}\n\nexport { Header };\n","import { CharacterObject } from \"../Common/Types\";\nimport \"./Enemy.scss\";\n\ninterface EnemyProps extends CharacterObject {\n  onClickEnemy: React.MouseEventHandler<HTMLElement>;\n  level: number;\n  maxLife: number;\n}\n\nfunction Enemy({\n  onClickEnemy,\n  name,\n  srcImg,\n  life,\n  maxLife,\n  strength,\n  dexterity,\n  level,\n}: EnemyProps) {\n  return (\n    <article\n      onClick={onClickEnemy}\n      role=\"button\"\n      aria-label={name}\n      className=\"enemy\"\n    >\n      <h2 className={`enemy__category enemy__category--level${level}`}>\n        Enemigo\n      </h2>\n      <div className={`enemy__container enemy__container--level${level}`}>\n        <article>\n          <p className={`enemy__name enemy__name--level${level}`}>{name}</p>\n          <img\n            src={srcImg}\n            alt={`Imagen ${name}`}\n            title={name}\n            className=\"enemy__image\"\n          />\n        </article>\n        <article className=\"enemy__statsContainer\">\n          <p>\n            Vida: {life} / {maxLife}\n          </p>\n          <p>Fuerza: {strength} </p>\n          <p>Destreza: {dexterity} </p>\n        </article>\n      </div>\n    </article>\n  );\n}\n\nexport { Enemy };\n","import { CharacterObject } from \"../Common/Types\";\nimport \"./Player.scss\";\n\ninterface PlayerProps extends CharacterObject {\n  maxLife: number;\n}\n\nfunction Player({\n  name,\n  srcImg,\n  life,\n  maxLife,\n  strength,\n  dexterity,\n}: PlayerProps) {\n  return (\n    <article data-testid=\"playerSection\" className=\"player\">\n      <h2 className=\"player__category\">Jugadora</h2>\n      <div className=\"player__container\">\n        <article>\n          <p className=\"player__name\">{name}</p>\n          <img\n            src={srcImg}\n            alt={`Imagen ${name}`}\n            title={name}\n            className=\"player__image\"\n          />\n        </article>\n        <article className=\"player__statsContainer\">\n          <p>\n            Vida: {life} / {maxLife}{\" \"}\n          </p>\n          <p>Fuerza: {strength} </p>\n          <p>Destreza: {dexterity} </p>\n        </article>\n      </div>\n    </article>\n  );\n}\n\nexport { Player };\n","import { ConsumableObject } from \"../Common/Types\";\nimport \"./Consumable.scss\";\n\ninterface ConsumableProps extends ConsumableObject {\n  onClickConsumable: React.MouseEventHandler<HTMLElement>;\n  consumableDisabled?: boolean;\n}\n\nfunction Consumable({\n  onClickConsumable,\n  name,\n  srcImg,\n  number,\n  consumableDisabled,\n}: ConsumableProps) {\n  return (\n    <section\n      role=\"button\"\n      aria-label={name}\n      onClick={!consumableDisabled ? onClickConsumable : undefined}\n      aria-disabled={consumableDisabled}\n      className=\"consumable\"\n    >\n      <p className=\"consumable__name\">{name}</p>\n      <div className=\"consumable__details\">\n        <img src={srcImg} alt={`Imagen ${name}`} className=\"consumable__img\" />\n        <p className=\"consumable__number\">Nº {number}</p>\n      </div>\n    </section>\n  );\n}\n\nexport { Consumable };\n","function rollD20() {\n  return Math.floor(Math.random() * 20 + 1);\n}\n\nfunction rollD12() {\n  return Math.floor(Math.random() * 12 + 1);\n}\n\nfunction rollD10() {\n  return Math.floor(Math.random() * 10 + 1);\n}\n\nfunction rollD8() {\n  return Math.floor(Math.random() * 8 + 1);\n}\n\nfunction rollD6() {\n  return Math.floor(Math.random() * 6 + 1);\n}\n\nfunction rollD4() {\n  return Math.floor(Math.random() * 4 + 1);\n}\n\nexport { rollD20, rollD12, rollD10, rollD8, rollD6, rollD4 };\n","function getAbilityModifier(abilityScore: number) {\n  return Math.floor((abilityScore - 10) / 2);\n}\nexport { getAbilityModifier };\n","import { rollD20, rollD4 } from \"./dices\";\nimport { getAbilityModifier } from \"./getAbilityModifier\";\n\ninterface ResolveCombatReturn {\n  damage: number;\n  resultD20: number;\n  resultD4: number;\n}\n\nfunction resolveCombat(\n  strength: number,\n  dexterity: number,\n  roll20 = rollD20,\n  roll4 = rollD4\n): ResolveCombatReturn {\n  const strengthModifier = getAbilityModifier(strength);\n  const dexterityModifier = getAbilityModifier(dexterity);\n  const resultD20 = roll20();\n  const resultD4 = roll4();\n  const attackRoll = resultD20 + strengthModifier;\n  const armorClass = 10 + dexterityModifier;\n  if (attackRoll >= armorClass) {\n    return {\n      damage: resultD4 + strengthModifier,\n      resultD20,\n      resultD4,\n    };\n  } else {\n    return {\n      damage: 0,\n      resultD20,\n      resultD4,\n    };\n  }\n}\nexport { resolveCombat };\n","import { useEffect, useRef } from \"react\";\nimport { MessageObject } from \"../Common/Types\";\nimport \"./CombatLog.scss\";\n\ninterface CombatLogProps {\n  messages: MessageObject[];\n}\n\nfunction CombatLog({ messages }: CombatLogProps) {\n  const lastMsgRef = useRef<HTMLLIElement>(null);\n\n  useEffect(() => {\n    if (lastMsgRef.current && lastMsgRef.current.scrollIntoView) {\n      lastMsgRef.current?.scrollIntoView();\n    }\n  });\n\n  return (\n    <section role=\"log\" className=\"combatLog\">\n      <h3 className=\"combatLog__title\">Registro de combate</h3>\n      {messages.length ? (\n        <ul>\n          {messages.map((message, index, array) => (\n            <li\n              key={index}\n              className={`combatLog__msg combatLog__msg--${message.type}`}\n              ref={array.length - 1 === index ? lastMsgRef : undefined}\n            >\n              {message.text}\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No hay entradas en el registro</p>\n      )}\n    </section>\n  );\n}\nexport { CombatLog };\n","import ReactDOM from \"react-dom\";\nimport \"./Modal.scss\";\n\ninterface ModalProps {\n  onCloseModal: () => void;\n  children: JSX.Element;\n}\n\nconst modalRoot = document.createElement(\"div\");\nmodalRoot.setAttribute(\"id\", \"modal-root\");\ndocument.body.appendChild(modalRoot);\n\nfunction Modal({ onCloseModal, children }: ModalProps) {\n  return ReactDOM.createPortal(\n    <div onClick={onCloseModal} data-testid=\"modal-overlay\" className=\"modal\">\n      <div onClick={(e) => e.stopPropagation()} className=\"modal__container\">\n        {children}\n        <div\n          onClick={onCloseModal}\n          role=\"button\"\n          aria-label=\"cerrar\"\n          className=\"modal__button\"\n        >\n          <i className=\"fas fa-times-circle\"></i>\n        </div>\n      </div>\n    </div>,\n    modalRoot\n  );\n}\n\nexport { Modal };\n","import { useState, useEffect } from \"react\";\nimport { Header } from \"../Header/Header\";\nimport { Enemy } from \"../Enemy/Enemy\";\nimport { Player } from \"../Player/Player\";\nimport { Consumable } from \"../Consumable/Consumable\";\nimport { resolveCombat } from \"../../Utils/resolveCombat\";\nimport { CombatLog } from \"../CombatLog/CombatLog\";\nimport { Modal } from \"../Common/Modal/Modal\";\nimport {\n  CharacterObject,\n  MessageObject,\n  ConsumableObject,\n} from \"../Common/Types\";\nimport \"./Battlefield.scss\";\n\ninterface BattlefieldProps {\n  enemy: CharacterObject;\n  player: CharacterObject;\n  healthPotion: ConsumableObject;\n  level: number;\n  currentAmountPotions: number;\n  setCurrentAmountPotions: React.Dispatch<React.SetStateAction<number>>;\n  onCombatFinish: (result: \"win\" | \"lose\") => void;\n  mockRoll20Enemy?: () => number;\n  mockRoll4Enemy?: () => number;\n  mockRoll20Player?: () => number;\n  mockRoll4Player?: () => number;\n}\n\nfunction Battlefield({\n  enemy,\n  player,\n  level,\n  healthPotion,\n  currentAmountPotions,\n  setCurrentAmountPotions,\n  onCombatFinish,\n  mockRoll20Enemy,\n  mockRoll4Enemy,\n  mockRoll20Player,\n  mockRoll4Player,\n}: BattlefieldProps) {\n  const [enemyLife, setEnemyLife] = useState(enemy.life);\n  const [messages, setMessages] = useState<MessageObject[]>([]);\n  const [playerLife, setPlayerLife] = useState(player.life);\n  const [enemyTurn, setEnemyTurn] = useState(false);\n  const [tutorialModal, setTutorialModal] = useState(level === 1);\n\n  useEffect(() => {\n    if (enemyTurn) {\n      const { damage, resultD20, resultD4 } = resolveCombat(\n        enemy.strength,\n        player.dexterity,\n        mockRoll20Player,\n        mockRoll4Player\n      );\n      const playerResultLife = playerLife - damage;\n      setPlayerLife(playerResultLife > 0 ? playerResultLife : 0);\n      if (damage) {\n        setMessages([\n          ...messages,\n          { text: \"Turno del enemigo\", type: \"enemyTurn\" },\n          {\n            text: `Enemigo lanza D20 y saca ${resultD20}. Ataque exitoso del enemigo`,\n            type: \"attack\",\n          },\n          {\n            text: `Enemigo lanza D4 y saca ${resultD4}. ${damage} puntos de daño`,\n            type: \"attack\",\n          },\n        ]);\n        setEnemyTurn(false);\n      } else {\n        setMessages([\n          ...messages,\n          { text: \"Turno del enemigo\", type: \"enemyTurn\" },\n          {\n            text: `Enemigo lanza D20 y saca ${resultD20}. Ataque fallido del enemigo`,\n            type: \"attack\",\n          },\n        ]);\n        setEnemyTurn(false);\n      }\n    } else {\n      setMessages([...messages, { text: \"Tu turno\", type: \"playerTurn\" }]);\n    }\n  }, [enemyTurn]);\n\n  useEffect(() => {\n    if (!playerLife) {\n      onCombatFinish(\"lose\");\n    }\n    if (!enemyLife) {\n      onCombatFinish(\"win\");\n    }\n  }, [playerLife, enemyLife, onCombatFinish]);\n\n  return (\n    <>\n      {tutorialModal ? (\n        <Modal onCloseModal={() => setTutorialModal(false)}>\n          <p className=\"modalParagraph\">\n            Haz click en la carta del enemigo para atacarlo\n          </p>\n        </Modal>\n      ) : null}\n      <Header level={level} />\n      <main className={`main main--background${level}`}>\n        <section className=\"main__charactersContainer\">\n          <Enemy\n            onClickEnemy={() => {\n              const { damage, resultD20, resultD4 } = resolveCombat(\n                player.strength,\n                enemy.dexterity,\n                mockRoll20Enemy,\n                mockRoll4Enemy\n              );\n              const enemyResultLife = enemyLife - damage;\n              setEnemyLife(enemyResultLife > 0 ? enemyResultLife : 0);\n              if (damage) {\n                setMessages([\n                  ...messages,\n                  {\n                    text: `Lanzas D20 y sacas ${resultD20}. Tu ataque es exitoso!`,\n                    type: \"attack\",\n                  },\n                  {\n                    text: `Lanzas D4 y sacas ${resultD4}. ${damage} puntos de daño!`,\n                    type: \"attack\",\n                  },\n                ]);\n              } else {\n                setMessages([\n                  ...messages,\n                  {\n                    text: `Lanzas D20 y sacas ${resultD20}. Tu ataque falla`,\n                    type: \"attack\",\n                  },\n                ]);\n              }\n              setEnemyTurn(true);\n            }}\n            name={enemy.name}\n            srcImg={enemy.srcImg}\n            life={enemyLife}\n            maxLife={enemy.life}\n            strength={enemy.strength}\n            dexterity={enemy.dexterity}\n            level={level}\n          />\n          <Player\n            name={player.name}\n            srcImg={player.srcImg}\n            life={playerLife}\n            maxLife={player.life}\n            strength={player.strength}\n            dexterity={player.dexterity}\n          />\n          <Consumable\n            onClickConsumable={() => {\n              if (playerLife < player.life) {\n                if (playerLife <= player.life - 10) {\n                  setPlayerLife(playerLife + 10);\n                  setMessages([\n                    ...messages,\n                    {\n                      text: \"Usas poti de vida → +10 puntos de vida\",\n                      type: \"consumable\",\n                    },\n                  ]);\n                } else {\n                  let remainingPlayerLife = player.life - playerLife;\n                  setPlayerLife(playerLife + remainingPlayerLife);\n                  setMessages([\n                    ...messages,\n                    {\n                      text: `Usas poti de vida → ${remainingPlayerLife} puntos de vida`,\n                      type: \"consumable\",\n                    },\n                  ]);\n                }\n              } else {\n                setPlayerLife(playerLife);\n                setMessages([\n                  ...messages,\n                  {\n                    text: \"Tienes demasiada vida para usar poti\",\n                    type: \"consumable\",\n                  },\n                ]);\n              }\n              if (currentAmountPotions > 0 && currentAmountPotions <= 3) {\n                setCurrentAmountPotions(currentAmountPotions - 1);\n                setEnemyTurn(true);\n              } else {\n                setCurrentAmountPotions(currentAmountPotions);\n              }\n            }}\n            name={healthPotion.name}\n            srcImg={healthPotion.srcImg}\n            number={currentAmountPotions}\n            consumableDisabled={currentAmountPotions === 0}\n          />\n        </section>\n        <section className=\"main__combatlogContainer\">\n          <CombatLog messages={messages} />\n        </section>\n      </main>\n    </>\n  );\n}\nexport { Battlefield };\n","import \"./HomePage.scss\";\n\ninterface HomePageProps {\n  onClickStart: React.MouseEventHandler<HTMLElement>;\n}\n\nfunction HomePage({ onClickStart }: HomePageProps) {\n  return (\n    <main className=\"mainHomepage\">\n      <section className=\"mainHomepage__text\">\n        <p className=\"mainHomepage__gameTitle\">Truthy, The Card Game</p>\n        <p className=\"mainHomepage__gameCompany\">Andar x Casa Productions®</p>\n        <p className=\"mainHomepage__gameSubtitle\">\n          El juego de cartas donde podrás combatir con los verdaderos héroes que\n          luchan contra sus opresores\n        </p>\n      </section>\n      <section>\n        <button onClick={onClickStart} className=\"mainHomepage__button\">\n          Nueva partida\n        </button>\n      </section>\n    </main>\n  );\n}\n\nexport { HomePage };\n","export default __webpack_public_path__ + \"static/media/Aleksandra.c3b26d86.png\";","import { CharacterObject } from \"../Components/Common/Types\";\nimport Aleksandra from \"../Images/Aleksandra.png\";\nimport Gnome from \"../Images/Gnome.png\";\nimport Human from \"../Images/Human.png\";\nimport Dwarf from \"../Images/Dwarf.png\";\nimport Elf from \"../Images/Elf.png\";\n\nconst enemy: CharacterObject[] = [\n  {\n    name: \"Francesco\",\n    srcImg: Gnome,\n    life: 20,\n    strength: 15,\n    dexterity: 14,\n  },\n  {\n    name: \"Sam\",\n    srcImg: Human,\n    life: 32,\n    strength: 12,\n    dexterity: 14,\n  },\n  {\n    name: \"Agusto\",\n    srcImg: Dwarf,\n    life: 42,\n    strength: 15,\n    dexterity: 15,\n  },\n  {\n    name: \"Christoff\",\n    srcImg: Elf,\n    life: 57,\n    strength: 17,\n    dexterity: 16,\n  },\n];\n\nconst player: CharacterObject[] = [\n  {\n    name: \"Aleksándra\",\n    srcImg: Aleksandra,\n    life: 14,\n    strength: 18,\n    dexterity: 14,\n  },\n  {\n    name: \"Aleksándra\",\n    srcImg: Aleksandra,\n    life: 23,\n    strength: 18,\n    dexterity: 14,\n  },\n  {\n    name: \"Aleksándra\",\n    srcImg: Aleksandra,\n    life: 32,\n    strength: 18,\n    dexterity: 14,\n  },\n  {\n    name: \"Aleksándra\",\n    srcImg: Aleksandra,\n    life: 45,\n    strength: 18,\n    dexterity: 14,\n  },\n];\n\nexport { player, enemy };\n","export default __webpack_public_path__ + \"static/media/Gnome.27363843.png\";","export default __webpack_public_path__ + \"static/media/Human.3e173381.png\";","export default __webpack_public_path__ + \"static/media/Dwarf.d144af21.png\";","export default __webpack_public_path__ + \"static/media/Elf.3169e275.png\";","import { ConsumableObject } from \"../Components/Common/Types\";\nimport heathPotion from \"../Images/heathPotion.png\";\n\nconst healtPotion: ConsumableObject = {\n  name: \"poción salud\",\n  number: 2,\n  srcImg: heathPotion,\n};\n\nexport { healtPotion };\n","export default __webpack_public_path__ + \"static/media/heathPotion.c70a87db.png\";","import { useState } from \"react\";\nimport { Battlefield } from \"../Battlefield/Battlefield\";\nimport { HomePage } from \"../HomePage/HomePage\";\nimport { player, enemy } from \"../../Data/characters\";\nimport { CharacterObject, ConsumableObject } from \"../Common/Types\";\nimport \"./App.scss\";\nimport { healtPotion } from \"../../Data/consumables\";\n\ntype Screens = \"start-screen\" | \"win-battle\" | \"win-game\" | \"lose\" | \"battle\";\n\ninterface AppProps {\n  mockRoll20Enemy?: () => number;\n  mockRoll4Enemy?: () => number;\n  mockRoll20Player?: () => number;\n  mockRoll4Player?: () => number;\n  mockEnemy?: CharacterObject[];\n  mockPlayer?: CharacterObject[];\n  mockHealthPotion?: ConsumableObject;\n}\n\nfunction App({\n  mockRoll20Enemy,\n  mockRoll4Enemy,\n  mockRoll20Player,\n  mockRoll4Player,\n  mockEnemy,\n  mockPlayer,\n  mockHealthPotion,\n}: AppProps) {\n  const [screen, setScreen] = useState<Screens>(\"start-screen\");\n  const [level, setLevel] = useState(1);\n  const [numberPotions, setNumberPotions] = useState(3);\n\n  if (screen === \"win-battle\") {\n    return (\n      <main className=\"mainApp mainAppWinB\">\n        <p className=\"mainAppWinB__resultMsg\">Victoria!!</p>\n        <p className=\"mainAppWinB__text\">\n          Has alcanzado el nivel{\" \"}\n          <span className=\"mainAppWinB__level\">{level}</span>\n        </p>\n        <button onClick={() => setScreen(\"battle\")} className=\"mainApp__button\">\n          Continuar jugando\n        </button>\n      </main>\n    );\n  } else if (screen === \"lose\") {\n    return (\n      <main className=\"mainApp mainAppLose\">\n        <p className=\"mainAppLose__resultMsg\">Has perdido 😢</p>\n        <button\n          onClick={() => setScreen(\"battle\")}\n          className=\"mainApp__button mainAppLose__button\"\n        >\n          Intentarlo de nuevo\n        </button>\n      </main>\n    );\n  } else if (screen === \"win-game\") {\n    return (\n      <main className=\"mainApp mainAppWinG\">\n        <div className=\"mainAppWinG__fireworks\">\n          <div className=\"mainAppWinG__fireworks--before\"></div>\n          <div className=\"mainAppWinG__fireworks--after\"></div>\n        </div>\n        <p className=\"mainAppWinG__text\">Has completado el juego!!</p>\n        <button\n          onClick={() => setScreen(\"battle\")}\n          className=\"mainApp__button mainAppWinG__button\"\n        >\n          Volver a jugar\n        </button>\n      </main>\n    );\n  } else if (screen === \"battle\") {\n    return (\n      <Battlefield\n        enemy={mockEnemy ? mockEnemy[level - 1] : enemy[level - 1]}\n        player={mockPlayer ? mockPlayer[level - 1] : player[level - 1]}\n        level={level}\n        healthPotion={mockHealthPotion ? mockHealthPotion : healtPotion}\n        currentAmountPotions={numberPotions}\n        setCurrentAmountPotions={setNumberPotions}\n        onCombatFinish={(combatResult) => {\n          if (combatResult === \"win\" && level < 4) {\n            setScreen(\"win-battle\");\n            setLevel(level + 1);\n          } else if (combatResult === \"win\" && level === 4) {\n            setScreen(\"win-game\");\n            setLevel(1);\n          } else {\n            setScreen(\"lose\");\n          }\n        }}\n        mockRoll20Enemy={mockRoll20Enemy}\n        mockRoll4Enemy={mockRoll4Enemy}\n        mockRoll20Player={mockRoll20Player}\n        mockRoll4Player={mockRoll4Player}\n      />\n    );\n  } else {\n    return <HomePage onClickStart={() => setScreen(\"battle\")} />;\n  }\n}\n\nexport { App };\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./Components/App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}